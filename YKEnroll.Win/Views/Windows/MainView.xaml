<Window x:Class="YKEnroll.Win.Views.Windows.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:viewModels="clr-namespace:YKEnroll.Win.ViewModels"
        xmlns:themes="clr-namespace:YKEnroll.Win"
        xmlns:local="clr-namespace:YKEnroll.Win"
        mc:Ignorable="d"
        Style="{StaticResource StyledWindow}"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
        Title="YK-Enroll" Height="650" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0">
            <Menu DockPanel.Dock="Top" Background="{DynamicResource WindowColorBrush}">
                <MenuItem Header="_File" Foreground="{StaticResource ForegroundBrush.Light}">
                    <MenuItem Header="_Exit" Command="{Binding ExitCommand}" Foreground="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                </MenuItem>
                <MenuItem Header="_Tools" Foreground="{StaticResource ForegroundBrush.Light}">
                    <MenuItem Header="Reload devices" Command="{Binding GetDevicesCommand}" Foreground="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                    <MenuItem Header="Reload CA servers" Command="{Binding GetCAServersCommand}" Foreground="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                    <MenuItem Header="Show log" Command="{Binding ShowLogCommand}" Foreground="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                </MenuItem>
                <MenuItem Header="_Help" Foreground="{StaticResource ForegroundBrush.Light}">
                    <MenuItem Header="About" Command="{Binding AboutCommand}" Foreground="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                </MenuItem>
            </Menu>
        </DockPanel>

        <GroupBox Grid.Column="0" Grid.Row="1" Margin="5,5,0,0">
            <GroupBox.Style>
                <Style TargetType="GroupBox" BasedOn="{StaticResource Styled.AccentGroupBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=DataGrid_Devices, Path=SelectedItem.Session.Status.Busy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EnrollmentManager.Status.Busy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal" Height="20">
                    <!--<Path Stretch="Uniform" Width="20" Fill="{StaticResource ForegroundBrush.Light}" Data="{StaticResource Icons.SmartCardOutline}"/>-->
                    <Path Stretch="Uniform" Height="20" Width="20" Fill="{StaticResource ForegroundBrush.Light}" Data="{StaticResource Icons.YubiKey}"/>
                    <TextBlock Text="Yubikeys" Margin="4,0,0,0" FontSize="{DynamicResource FontSizeHeader1}" VerticalAlignment="Center" Foreground="{StaticResource ForegroundBrush.Light}"/>
                </StackPanel>
            </GroupBox.Header>
            <DataGrid SelectedItem="{Binding SelectedDevice}" x:Name="DataGrid_Devices" CanUserResizeRows="False" AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Single" ItemsSource="{Binding EnrollmentManager.YubiKeys}">
                <DataGrid.RowHeaderTemplate>
                    <DataTemplate>
                        <Grid Margin="5,0,5,0">
                            <!-- <Path Stretch="Uniform" Height="15" Width="15" Fill="{StaticResource ForegroundBrush}"> -->
                            <Path Stretch="Uniform" Height="18" Width="18" Fill="{StaticResource Accent.ForegroundBrush}" Data="{StaticResource Icons.YubiKey}"/>
                        </Grid>
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Form factor" Width="Auto" Binding="{Binding FormFactor}"/>
                    <DataGridTextColumn Header="Serial" Width="Auto" Binding="{Binding SerialNumber}"/>
                    <DataGridTextColumn Header="Firmware" Width="Auto" Binding="{Binding FirmwareVersion}"/>
                    <DataGridTextColumn Header="USB Applications" Width="Auto" Binding="{Binding EnabledUsbCapabilities, Converter={StaticResource ListToStringConverter}}"/>
                    <DataGridTextColumn Header="NFC Applications" Width="Auto" Binding="{Binding EnabledNfcCapabilities, Converter={StaticResource ListToStringConverter}}"/>
                    <DataGridTextColumn Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <GroupBox Grid.Column="1" Grid.Row="1" Margin="5,5,5,0">
            <GroupBox.Style>
                <Style TargetType="GroupBox" BasedOn="{StaticResource Styled.AccentGroupBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=DataGrid_Devices, Path=SelectedIndex}" Value="-1">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=DataGrid_Devices, Path=SelectedItem.Session.Status.Busy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EnrollmentManager.Status.Busy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>
            <GroupBox.Header>
                <Grid Height="20">
                    <TextBlock Text="Device actions" FontSize="{DynamicResource FontSizeHeader1}" Foreground="{StaticResource ForegroundBrush.Light}" HorizontalAlignment="Center"/>
                </Grid>
            </GroupBox.Header>
            <StackPanel Orientation="Vertical">
                <Button Content="Pin/Puk"      Command="{Binding ChangeCodesCommand}"  Margin="5"/>
                <Button Content="Reset PIV"    Command="{Binding ResetPivCommand}"     Margin="5"/>
                <Button Content="Applications" Command="{Binding ApplicationsCommand}" Margin="5"/>
            </StackPanel>
        </GroupBox>
        
        <Separator Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Height="10" Margin="10"/>

        <GroupBox Grid.Column="0" Grid.Row="3" Margin="5,0,0,5">
            <GroupBox.Style>
                <Style TargetType="GroupBox" BasedOn="{StaticResource Styled.AccentGroupBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=DataGrid_Devices, Path=SelectedIndex}" Value="-1">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=DataGrid_Devices, Path=SelectedItem.Session.Status.Busy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EnrollmentManager.Status.Busy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal" Height="20">
                    <Path Stretch="Uniform" Height="14" Width="20" Fill="{StaticResource ForegroundBrush.Light}" Data="{StaticResource Icons.List}"/>
                    <TextBlock Text="Slots"  Margin="4,0,0,0" FontSize="{DynamicResource FontSizeHeader1}" VerticalAlignment="Center" Foreground="{StaticResource ForegroundBrush.Light}"/>
                </StackPanel>
            </GroupBox.Header>
            <DataGrid SelectedItem="{Binding SelectedSlot}" Name="DataGrid_Slots" CanUserResizeRows="False" AutoGenerateColumns="False" IsReadOnly="True" SelectionMode="Single" ItemsSource="{Binding ElementName=DataGrid_Devices, Path=SelectedItem.Slots}">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type Button}" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border BorderThickness="0,0,0,1" BorderBrush="Black"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.RowHeaderTemplate>
                    <DataTemplate>
                        <Grid DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGridRow}}" ToolTip="{Binding SlotStatusMessage}" ToolTipService.InitialShowDelay="0" Margin="5,0,5,0">
                            <Rectangle>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Setter Property="Fill" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SlotStatus}" Value="Error">
                                                <Setter Property="Fill" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SlotStatus}" Value="Warning">
                                                <Setter Property="Fill" Value="Yellow"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <!-- <Path Stretch="Uniform" Height="15" Width="15" Fill="{StaticResource ForegroundBrush}"> -->
                            <Path Stretch="Uniform" Height="15" Width="15">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="{StaticResource Accent.ForegroundBrush}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SlotStatus}" Value="Success">
                                                <Setter Property="Data" Value="{StaticResource Icons.BoxStar}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SlotStatus}" Value="NoData">
                                                <Setter Property="Data" Value="{StaticResource Icons.BoxEmpty}"/>
                                                <Setter Property="Fill" Value="{StaticResource ForegroundBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SlotStatus}" Value="NotRead">
                                                <Setter Property="Data" Value="{StaticResource Icons.BoxQuestion}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SlotStatus}" Value="Error">
                                                <Setter Property="Data" Value="{StaticResource Icons.BoxError}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SlotStatus}" Value="Warning">
                                                <Setter Property="Data" Value="{StaticResource Icons.BoxError}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </Grid>
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Slot"       Width="Auto" Binding="{Binding Name}"/>
                    <DataGridTextColumn Header="Key"       Width="Auto" Binding="{Binding CertificateKeyInfo}"/>
                    <DataGridTextColumn Header="Subject"    Width="Auto" Binding="{Binding StrippedCN,NotifyOnTargetUpdated=True}"/>
                    <DataGridTextColumn Header="UPN"        Width="Auto" Binding="{Binding UserPrincipalName}"/>
                    <DataGridTextColumn Header="Not before" Width="Auto" Binding="{Binding Certificate.NotBefore}"/>
                    <DataGridTextColumn Header="Not after"  Width="Auto" Binding="{Binding Certificate.NotAfter}"/>
                    <DataGridTextColumn Header="Issuer"     Width="Auto" Binding="{Binding IssuerCN}"/>
                    <DataGridTextColumn Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <GroupBox Grid.Column="1" Grid.Row="3" Margin="5,0,5,5">
            <GroupBox.Style>
                <Style TargetType="GroupBox" BasedOn="{StaticResource Styled.AccentGroupBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=DataGrid_Slots, Path=SelectedIndex}" Value="-1">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=DataGrid_Devices, Path=SelectedItem.Session.Status.Busy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EnrollmentManager.Status.Busy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>
            <GroupBox.Header>
                <Grid Height="20">
                    <TextBlock Text="Slot actions" FontSize="{DynamicResource FontSizeHeader1}" Foreground="{StaticResource ForegroundBrush.Light}" HorizontalAlignment="Center"/>
                </Grid>
            </GroupBox.Header>
            <StackPanel Orientation="Vertical">
                <Button Content="Enroll"     Command="{Binding EnrollCommand}"    Margin="5"/>
                <Button Content="Create CSR" Command="{Binding CreateCsrCommand}" Margin="5"/>
                <Button Content="Request"    Command="{Binding RequestCommand}"   Margin="5"/>
                <Button Content="Retrieve"   Command="{Binding RetrieveCommand}"  Margin="5"/>
                <Button Content="Import"     Command="{Binding ImportCommand}"    Margin="5"/>
                <Button Content="Attest"     Command="{Binding AttestCommand}"    Margin="5"/>
                <Button Content="View"       Command="{Binding ShowCertificateCommand}" Margin="5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=DataGrid_Slots, Path=SelectedItem.Certificate}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            </GroupBox>

        <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" Height="30" Visibility="{Binding ElementName=ProgressBar, Path=IsIndeterminate, Converter={StaticResource VisCon} }">
            <ProgressBar Background="Transparent" x:Name="ProgressBar">
                <ProgressBar.Style>
                    <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=DataGrid_Devices, Path=SelectedItem.Session.Status.Busy}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsIndeterminate" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding EnrollmentManager.Status.Busy}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="IsIndeterminate" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ProgressBar.Style>
            </ProgressBar>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ElementName=DataGrid_Devices, Path=SelectedItem.Session.Status.Text}" Visibility="{Binding ElementName=DataGrid_Devices, Path=SelectedItem.Session.Status.Busy, Converter={StaticResource VisCon}}"/>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding EnrollmentManager.Status.Text}" Visibility="{Binding EnrollmentManager.Status.Busy, Converter={StaticResource VisCon}}"/>
        </Grid>
        
        
    </Grid>
</Window>
